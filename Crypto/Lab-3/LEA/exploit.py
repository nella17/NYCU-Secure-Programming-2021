from pwn import *
from math import sin
split = lambda v,sz: [v[i:i+sz] for i in range(0,len(v),sz)]

def extend(s, prev_len, magic):
    A,F,C,B,D,E = magic
    def G(X,Y,Z):
        return (X ^ (~Z | ~Y) ^ Z) & 0xFFFFFFFF
    def H(X,Y):
        return (X << Y | X >> (32 - Y)) & 0xFFFFFFFF
    X = [int((0xFFFFFFFE) * sin(i)) & 0xFFFFFFFF for i in range(256)]
    s_size = len(s) + prev_len
    s += bytes([0x80])
    if len(s) % 128 > 120:
        while len(s) % 128 != 0: s += bytes(1)
    while len(s) % 128 < 120: s += bytes(1)
    s += bytes.fromhex(hex(s_size * 8)[2:].rjust(16, '0'))
    # print(s)
    for i, b in enumerate(s):
        k, l = int(b), i & 0x1f
        A = (B + H(A + G(B,C,D) + X[k], l)) & 0xFFFFFFFF
        B = (C + H(B + G(C,D,E) + X[k], l)) & 0xFFFFFFFF
        C = (D + H(C + G(D,E,F) + X[k], l)) & 0xFFFFFFFF
        D = (E + H(D + G(E,F,A) + X[k], l)) & 0xFFFFFFFF
        E = (F + H(E + G(F,A,B) + X[k], l)) & 0xFFFFFFFF
        F = (A + H(F + G(A,B,C) + X[k], l)) & 0xFFFFFFFF
    return ''.join(map(lambda x : hex(x)[2:].rjust(8, '0'), [A, F, C, B, D, E]))

if args.REMOTE:
    io = remote('edu-ctf.csie.org', 42073)
else:
    io = process(['python3', 'server.py'])

username = b'Admin'

io.sendlineafter(b': ', username)
io.readline()

session = io.readline().split()[-1]
# print(eval(io.readline()))
mac = io.readline().split()[-1]
magic = list(map(lambda x: int(x,16), split(mac,8)))

for pwL in range(1, 25):
    prev_len = len(username) + 2 + pwL + 2 + len(session)
    pad = session + bytes([0x80])
    pad += bytes(1) * (120-1-prev_len)
    pad += bytes.fromhex(hex(prev_len*8)[2:].rjust(16, '0'))
    cmd = b'flag'
    ext = b'&&' + cmd
    guess = extend(ext, 120-2+pwL, magic).encode()
    payload = b'&&'.join([ guess, pad, cmd ])
    io.sendlineafter(b'?', payload.hex().encode())
    # print(eval(io.readline()))
    # print(guess.decode())
    # print(eval(io.readline()).decode())
    res = io.readline().decode()
    if 'FLAG' in res:
        print(res)
        break

# io.interactive()
