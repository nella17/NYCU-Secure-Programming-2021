from pwn import *
from base64 import b64encode, b64decode
from Crypto.Util.Padding import pad, unpad
import json
split = lambda v,sz: [v[i:i+sz] for i in range(0,len(v),sz)]

HOST, PORT = 'edu-ctf.csie.org', 42070

if args.REMOTE:
    io = remote(HOST, PORT)
else:
    io = process(['python', 'server.py'])

def oracle(guess):
    guess = guess.hex()
    print(guess)
    io.sendlineafter('= ', guess)
    return b'YES' in io.readline()

cipher = bytes.fromhex(io.readline().split()[-1].decode())
cipher = split(cipher, 16)
print(cipher)

flag = b''

for i in range(1, len(cipher)):
    ans = b''
    iv, block = cipher[i-1:i+1]
    print(iv, block)
    for j in range(16):
        for k in range(256):
            guess = b'\0' * (16-1-j) + bytes([ k ^ 0x80 ]) + ans + block
            if oracle(guess):
                ans = bytes([ k ]) + ans
                print(ans)
                break
    flag += xor(ans, iv)
    print(flag)
    print()

flag = flag[:flag.index(b'\x80')].decode()
success(flag)

# io.interactive()
