from sage.all import *
import hashlib

g = 2
n = 22975024372641088191783192950030840455936651367831116706532074148973552639475113523713622342956112126457710740633725263638116108451282253328304547
c = 3391562491073162069780474526700107230909189849786338234577033763865425503028855096698198069367193995675035849507973902223745251492606324520756666
enc = bytes.fromhex('c401549a04656914f9288164f6298ccc09771d8805db7248e3162b86237cefd2621df96509d8d9f32dbd2f56c6c41414971b990f31f80ced0cfe4eac89f55a93')

from sage.groups.generic import bsgs
def pohlig_hellman(p,g,h,fac = None, debug = False):
    F = IntegerModRing(p)
    g = F(g)
    h = F(h)
    if not fac:
        fac = set(ecm.factor(p-1))
    if debug: print(fac)
    xi = []
    pi = []
    for q in fac:
        cnt = 1
        while (p-1)%(q**(cnt+1)) == 0:
            cnt += 1
        if debug: print(q,cnt)
        k = q**cnt
        G = g**((p-1)//k)
        H = h**((p-1)//k)
        X = bsgs(G, H, (0, q))
        xi.append(X)
        pi.append(k)
        if debug: print(G, H, X)
    r = crt(xi, pi)
    return r

k = pohlig_hellman(n,g,c)
print(k)

k = hashlib.sha512(str(k).encode('ascii')).digest()
flag = bytes(ci ^ ki for ci, ki in zip(enc, k)).strip(b'\0').decode().strip()
print(flag)
